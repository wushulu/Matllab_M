%implements s62_b0_svcto_5_SystemInitialize "C"

%function SystemInitialize(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%assign   SystemInitialize_open_ValidHalls_l_15_13 = ""
%openfile SystemInitialize_open_ValidHalls_l_15_13

/* SystemInitialize for IfAction SubSystem: '<S40>/Valid Halls' */
%closefile SystemInitialize_open_ValidHalls_l_15_13

%assign    SystemInitialize_body_ValidHalls_l_15_13 = ""
%openfile  SystemInitialize_body_ValidHalls_l_15_13

%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[6], "SystemInitialize",3)
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_ValidHalls_Init",6,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCG_DumpSSCode("/*@[49d7f9*/",SLibCGIRGenReusableSysCall("STMF4Hall_ValidHalls_Init", ["%<_modelSS>", "&/*@>49d954*/STMF4Hall_B./*@>49d953*/ValidHalls_l", "&/*@>49d965*/STMF4Hall_P./*@>49d964*/ValidHalls_l"], 6, 1, 4, 3, 4, 28),"/*@]*/")>\
%assign ss = ::CompiledModel.System[6]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

%endif
%closefile SystemInitialize_body_ValidHalls_l_15_13

%assign    SystemInitialize_close_ValidHalls_l_15_13 = ""
%openfile  SystemInitialize_close_ValidHalls_l_15_13

/* End of SystemInitialize for SubSystem: '<S40>/Valid Halls' */
%closefile SystemInitialize_close_ValidHalls_l_15_13
%<SLibCG_DumpSSCode(SystemInitialize_open_ValidHalls_l_15_13, SystemInitialize_body_ValidHalls_l_15_13, SystemInitialize_close_ValidHalls_l_15_13)>


/* SystemInitialize for SignalConversion generated from: '<S3>/Out2' incorporates:
 *  Constant: '<S3>/Constant'
 */
/*@>49d49c*/STMF4Hall_B./*@>49d900*/OutportBufferForOut2_e/*@>491906*/ = /*@>49d517*/STMF4Hall_P./*@>49d909*/Constant_Value_p;
/* SystemInitialize for Sum: '<S3>/Sum' incorporates:
 *  Outport: '<S3>/Out1'
 */
/*@>49d4a2*/STMF4Hall_B./*@>49d903*/Sum_c/*@>491902*/ = /*@>49d51d*/STMF4Hall_P./*@>49d90c*/Out1_Y0_h;
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedSystemInitializeLocalVars", localVarDecl)>
%endfunction
%function SystemInitializeFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void SystemInitialize(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(5, 0, fcnProtoType)>
%endfunction
