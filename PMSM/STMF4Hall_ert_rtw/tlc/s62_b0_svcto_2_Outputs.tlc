%implements s62_b0_svcto_2_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign _modelSS = ""

%<SLibGenerateExtModeOutput(system)>
/* {S!d4950}SwitchCase: '<S67>/Switch Case' */
/*@>495dfa*/switch (/*@>49565f*/rtu_hallReading) {
  case /*@>495614*/5:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",2)
    /* {S!d4927}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem' incorporates:
 *  ActionPort: '<S68>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[497078*/",SLibCGIRGenReusableSysCall("STMF4Hall_IfActionSubsystem", ["/*@>497349*/%<::tSimStruct>", "&/*@>49735a*/localB->/*@>497359*/Merge", "&/*@>49736b*/localB->/*@>49736a*/Merge1", "&/*@>49737c*/localP->/*@>49737b*/IfActionSubsystem"], 2, 0, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4927}End of Outputs for SubSystem: '<S67>/If Action Subsystem' */
%endif
    break;
  case /*@>495615*/4:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",2)
    /* {S!d4929}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem1' incorporates:
 *  ActionPort: '<S69>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[497079*/",SLibCGIRGenReusableSysCall("STMF4Hall_IfActionSubsystem", ["/*@>4973b2*/%<::tSimStruct>", "&/*@>4973c3*/localB->/*@>4973c2*/Merge", "&/*@>4973d4*/localB->/*@>4973d3*/Merge1", "&/*@>4973e5*/localP->/*@>4973e4*/IfActionSubsystem1"], 2, 1, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4929}End of Outputs for SubSystem: '<S67>/If Action Subsystem1' */
%endif
    break;
  case /*@>495616*/6:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",2)
    /* {S!d4931}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem2' incorporates:
 *  ActionPort: '<S70>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[49707a*/",SLibCGIRGenReusableSysCall("STMF4Hall_IfActionSubsystem", ["/*@>49741b*/%<::tSimStruct>", "&/*@>49742c*/localB->/*@>49742b*/Merge", "&/*@>49743d*/localB->/*@>49743c*/Merge1", "&/*@>49744e*/localP->/*@>49744d*/IfActionSubsystem2"], 2, 2, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4931}End of Outputs for SubSystem: '<S67>/If Action Subsystem2' */
%endif
    break;
  case /*@>495617*/2:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",2)
    /* {S!d4933}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem3' incorporates:
 *  ActionPort: '<S71>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[49707b*/",SLibCGIRGenReusableSysCall("STMF4Hall_IfActionSubsystem", ["/*@>497484*/%<::tSimStruct>", "&/*@>497495*/localB->/*@>497494*/Merge", "&/*@>4974a6*/localB->/*@>4974a5*/Merge1", "&/*@>4974b7*/localP->/*@>4974b6*/IfActionSubsystem3"], 2, 3, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4933}End of Outputs for SubSystem: '<S67>/If Action Subsystem3' */
%endif
    break;
  case /*@>495618*/3:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",2)
    /* {S!d4935}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem4' incorporates:
 *  ActionPort: '<S72>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[49707c*/",SLibCGIRGenReusableSysCall("STMF4Hall_IfActionSubsystem", ["/*@>4974ed*/%<::tSimStruct>", "&/*@>4974fe*/localB->/*@>4974fd*/Merge", "&/*@>49750f*/localB->/*@>49750e*/Merge1", "&/*@>497520*/localP->/*@>49751f*/IfActionSubsystem4"], 2, 4, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4935}End of Outputs for SubSystem: '<S67>/If Action Subsystem4' */
%endif
    break;
  case /*@>495619*/1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",2)
    /* {S!d4937}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem5' incorporates:
 *  ActionPort: '<S73>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hall_IfActionSubsystem",2,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[49707d*/",SLibCGIRGenReusableSysCall("STMF4Hall_IfActionSubsystem", ["/*@>497556*/%<::tSimStruct>", "&/*@>497567*/localB->/*@>497566*/Merge", "&/*@>497578*/localB->/*@>497577*/Merge1", "&/*@>497589*/localP->/*@>497588*/IfActionSubsystem5"], 2, 5, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4937}End of Outputs for SubSystem: '<S67>/If Action Subsystem5' */
%endif
    break;
  default:
    /* {S!d4925}Update for IfAction SubSystem: '<S67>/Switch Case Action Subsystem' incorporates:
 *  ActionPort: '<S77>/Action Port'
 */
    /* {S!d4948}Update for SwitchCase: '<S67>/Switch Case' */
    /*@>496cdf*/localDW->/*@>497306*/SwitchCaseActionSubsystem_Subsy/*@>4915f0*/ = /*@>4971d8*/4;
    /* {E!d4925}End of Update for SubSystem: '<S67>/Switch Case Action Subsystem' */
    break;
}
/* {E!d4950}End of SwitchCase: '<S67>/Switch Case' */

/* {S!d4956}If: '<S67>/If' */
/*@>4915f4*/if (/*@>495661*/rtu_previousState/*@>4915f3*/ == /*@>496be9*/localB->/*@>4972c7*/Merge) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",2)
    /* {S!d4939}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem6' incorporates:
 *  ActionPort: '<S74>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[49707e*/",SLibCGIRGenReusableSysCall("STMF4Hal_IfActionSubsystem6", ["/*@>4975bf*/%<::tSimStruct>", "&/*@>4975d0*/localB->/*@>4975cf*/Merge2", "&/*@>4975e1*/localB->/*@>4975e0*/Merge3", "&/*@>4975f2*/localP->/*@>4975f1*/IfActionSubsystem6"], 0, 0, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[0]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4939}End of Outputs for SubSystem: '<S67>/If Action Subsystem6' */
%endif
} else /*@>4915fa*/if (/*@>495663*/rtu_previousState/*@>4915f9*/ == /*@>496bf0*/localB->/*@>4972ca*/Merge1) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[0], "Output",2)
    /* {S!d4941}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem7' incorporates:
 *  ActionPort: '<S75>/Action Port'
 */
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,0)
%<SLibCG_AccessArg(2 ,1, 0)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,1)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,2)
%<SLibCG_AccessArg(2 ,1, 7)>
%endif
%if SLibCG_SystemFcnArgAccessed("STMF4Hal_IfActionSubsystem6",0,3)
%<SLibCG_AccessArg(2 ,1, 9)>
%endif

%<SLibCG_DumpSSCode("/*@[49707f*/",SLibCGIRGenReusableSysCall("STMF4Hal_IfActionSubsystem6", ["/*@>497628*/%<::tSimStruct>", "&/*@>497639*/localB->/*@>497638*/Merge2", "&/*@>49764a*/localB->/*@>497649*/Merge3", "&/*@>49765b*/localP->/*@>49765a*/IfActionSubsystem7"], 0, 1, 6, 2, 6, 6),"/*@]*/")>\
%assign ss = ::CompiledModel.System[0]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif

    /* {E!d4941}End of Outputs for SubSystem: '<S67>/If Action Subsystem7' */
%endif
} else {
    /* {S!d4943}Outputs for IfAction SubSystem: '<S67>/If Action Subsystem8' incorporates:
 *  ActionPort: '<S76>/Action Port'
 */
    /* {S!d4952}Merge: '<S67>/Merge3' incorporates:
 *  Constant: '<S76>/Constant'
 *  SignalConversion generated from: '<S76>/sequence_check'
 */
    /*@>496c05*/localB->/*@>4972d3*/Merge3/*@>491635*/ = /*@>496c8c*/localP->/*@>4972fd*/Constant_Value;
    /* {E!d4943}End of Outputs for SubSystem: '<S67>/If Action Subsystem8' */

    /* {S!d4945}Update for IfAction SubSystem: '<S67>/If Action Subsystem8' incorporates:
 *  ActionPort: '<S76>/Action Port'
 */
    /* {S!d4954}Update for If: '<S67>/If' */
    /*@>496ce6*/localDW->/*@>497309*/IfActionSubsystem8_SubsysRanBC/*@>4915fe*/ = /*@>4971db*/4;
    /* {E!d4945}End of Update for SubSystem: '<S67>/If Action Subsystem8' */
}
/* {E!d4956}End of If: '<S67>/If' */

/* {S!d4958}SignalConversion: '<S67>/Signal Conversion' */
*rty_inValidHall/*@>491600*/ = /*@>496c1a*/localB->/*@>4972dc*/Merge3;
/* {S!d4960}SignalConversion: '<S67>/Signal Conversion1' */
*rty_direction/*@>491602*/ = /*@>496c21*/localB->/*@>4972df*/Merge2;
/* {S!d4962}Switch: '<S67>/Switch' incorporates:
 *  Constant: '<S67>/Constant'
 *  RelationalOperator: '<S67>/Relational Operator'
 */
/*@>495bff*/if (/*@>496c28*/localB->/*@>4972e2*/Merge3/*@>49163c*/ != /*@>49563c*/0) {
    */*@>495c04*/rty_directional_speed_valid_fla/*@>495c02*/ = /*@>496c9b*/localP->/*@>497303*/Constant_Value_i;
} else {
    *rty_directional_speed_valid_fla/*@>491642*/ = (/*@>496c2f*/localB->/*@>4972e5*/Merge2/*@>494f4c*/ == /*@>495689*/rtu_previous_direction);
}
/* {E!d4962}End of Switch: '<S67>/Switch' */
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[2].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(2, 1, 0)>
%endif
%if SLibCG_ArgAccessed(2, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(2, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutput2LocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void STMF4Hall_ValidHalls(\
%assign comma = ""
%if SLibCG_ArgAccessed(2, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("STMF4Hall_ValidHalls", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>uint16_T rtu_hallReading\
%assign comma = ", "
%<comma>uint16_T rtu_previousState\
%assign comma = ", "
%<comma>int16_T rtu_previous_direction\
%assign comma = ", "
%<comma>boolean_T *rty_directional_speed_valid_fla\
%assign comma = ", "
%<comma>int16_T *rty_direction\
%assign comma = ", "
%<comma>uint16_T *rty_inValidHall\
%assign comma = ", "
%<comma>B_ValidHalls_STMF4Hall_T *localB\
%assign comma = ", "
%<comma>DW_ValidHalls_STMF4Hall_T *localDW\
%assign comma = ", "
%<comma>P_ValidHalls_STMF4Hall_T *localP\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(2, 1, fcnProtoType)>
%endfunction
